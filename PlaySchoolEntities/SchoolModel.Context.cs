//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlaySchoolEntities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PlaySchoolEntities1 : DbContext
    {
        public PlaySchoolEntities1()
            : base("name=PlaySchoolEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_UserDetailsGet_Result> usp_UserDetailsGet(string uname, string pwd)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserDetailsGet_Result>("usp_UserDetailsGet", unameParameter, pwdParameter);
        }
    
        public virtual ObjectResult<usp_CitiesGet_Result> usp_CitiesGet(Nullable<int> stateid)
        {
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CitiesGet_Result>("usp_CitiesGet", stateidParameter);
        }
    
        public virtual ObjectResult<usp_CountryGet_Result> usp_CountryGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CountryGet_Result>("usp_CountryGet");
        }
    
        public virtual ObjectResult<usp_StateGet_Result> usp_StateGet(Nullable<int> countryid)
        {
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("Countryid", countryid) :
                new ObjectParameter("Countryid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StateGet_Result>("usp_StateGet", countryidParameter);
        }
    }
}
