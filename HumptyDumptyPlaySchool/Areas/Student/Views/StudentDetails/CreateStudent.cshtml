@model PlaySchoolEntities.usp_StudentGet_Result

@{
    ViewBag.Title = "CreateStudent";
    Layout = "~/Views/Shared/_PlaySchoolLayoutPage.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/commanscript.js"></script>

<link href="~/Content/bootstrap.css" rel="stylesheet" />

<h2>CreateStudent</h2>


@using (Html.BeginForm("CreateStudent", "StudentDetails", null, FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create New Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("Gender", new SelectList(string.Empty, "value", "text"), "--Select--", htmlAttributes: new { @class = "dropdown" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        @*@Html.Partial("~/Views/Shared/_AddressPartial.cshtml",Model);*@
        @Html.Action("GetCountries", Model);
                <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOJ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.DOJ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="fo">
            @Html.LabelFor(model => model.FatherOccupation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @*@Html.EditorFor(model => model.FatherOccupation, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("FatherOccupation", new SelectList(string.Empty, "value", "text"), "--Select--", htmlAttributes: new { @class = "dropdown" })
              
                @Html.ValidationMessageFor(model => model.FatherOccupation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherOccupation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @*@Html.EditorFor(model => model.MotherOccupation, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.MotherOccupation, "", new { @class = "text-danger" })
                @Html.DropDownList("MotherOccupation", new SelectList(string.Empty, "value", "text"), "--Select--", htmlAttributes: new { @class = "dropdown" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FatherMobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.FatherMobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherMobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherMobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.MotherMobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherMobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.StudentPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @*@Html.EditorFor(model => model.StudentPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentPhoto, "", new { @class = "text-danger" })*@
                <input type="file" id="studentphoto" name="studentphoto"  />
            </div>
            <div class="col-md-6">
                <img id="imgstudentphoto" src="#" class="img-responsive" style="display:none;" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FatherPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                <input type="file" id="fatherphoto" name="fatherphoto" />
               @* @Html.EditorFor(model => model.FatherPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherPhoto, "", new { @class = "text-danger" })*@
            </div>
            <div class="col-md-6">
                <img id="blah" src="#" class="img-responsive" style="display:none;" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @*@Html.EditorFor(model => model.MotherPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherPhoto, "", new { @class = "text-danger" })*@
                <input type="file" id="motherphoto" ,name="motherphoto"  />
            </div>
            <div class="col-md-6">
                <img id="imgmotherphoto" src="#" class="img-responsive" style="display:none;" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Timings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Timings, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Timings, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.fees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fees, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentSource, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @*@Html.EditorFor(model => model.StudentSource, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("StudentSource", new SelectList(string.Empty, "value", "text"), "--Select--", htmlAttributes: new { @class = "dropdown" })
                @Html.ValidationMessageFor(model => model.StudentSource, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdmissionRemarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.AdmissionRemarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdmissionRemarks, "", new { @class = "text-danger" })
            </div>
        </div>

       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
<script>

    // document.getElementById('fo').innerHTML('Hello');
    $(document).ready(function () {


    var urltocall = 'http://' + location.hostname + ':' + location.port + "/Comman/Comman/GetMasterList";
    
  
   

    $("#fatherphoto").change(function () {
        readURL(this, $('#blah'));
    });
    $("#studentphoto").change(function () {
        readURL(this, $('#imgstudentphoto'));
    });
    $("#motherphoto").change(function () {
        readURL(this, $('#imgmotherphoto'));
    });



        //var urltocall = "http://" + location.host + "//Comman//Comman//GetMasterList";
        
   // debugger;
    var id = document.getElementById('FatherOccupation');
   
        fillDropdown($('#FatherOccupation'), '@Url.Action("GetMasterList")', 'FatherOccupation');
    
        fillDropdown($('#Gender'), '@Url.Action("GetMasterList")', 'Gender');
        fillDropdown($('#StudentSource'), '@Url.Action("GetMasterList")', 'NewStudentReferal');
        fillDropdown($('#MotherOccupation'), '@Url.Action("GetMasterList")', 'MotherOccupation');

      
    });
</script>

